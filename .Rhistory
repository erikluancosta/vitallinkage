h <- df |>select(par_1, par_2, ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2)
c <- df |> filter(ds_nome_pac_sound %in% c('A342B465S410', 'A254F655L220', 'A655F253S412', 'A535C250S410', 'A535R362S410') | par_2 %in% c(48133, 18801)) |> select(par_1, par_2, ds_nome_pac,ds_nome_pac_sound, dt_nasc, banco,regra1, regra2)
g <- left_join(df, par_list, by = "par_2") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
c
View(c)
g <- left_join(c, par_list, by = "par_2") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
View(g)
g <- left_join(c, par_list, by = "par_2", relationship = "many-to-many") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
View(g)
g <- left_join(df, par_list, by = "par_2", relationship = "many-to-many") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
View(g)
h <- g |>select(par_1, par_2, ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2)
View(h)
h <- g |>select(par_1, par_2,par_temp, par_final, ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2)
View(h)
View(h)
c <- df |> filter(ds_nome_pac_sound %in% c('A342B465S410', 'A254F655L220', 'A655F253S412', 'A535C250S410', 'A535R362S410', 'A342B260S410') | par_2 %in% c(48133, 18801)) |> select(par_1, par_2, ds_nome_pac,ds_nome_pac_sound, dt_nasc, banco,regra1, regra2)
g <- left_join(c, par_list, by = "par_2", relationship = "many-to-many") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
View(g)
h <- df |>select(par_1, par_2,par_temp, par_final, ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869, 949))
h <- df |> select(par_1, par_2,ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869, 949))
View(h)
# 1º condição
df <- concat_2 |>
arrange(ds_nome_pac, dt_nasc) |>
group_by(ds_nome_pac, dt_nasc) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_pac) &
((ds_nome_pac_sound == lag(ds_nome_pac_sound)) | (ds_nome_pac_sound == lead(ds_nome_pac_sound))), n(), NA))  |>
mutate(regra1 = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |>
mutate(par_1 = cur_group_id() * (N_par > 1)) |>
ungroup() |>
select(-N_par) |>
mutate(par_c1 = par_1) |>
arrange(par_1, banco)
# 2º condição
df <- df |>
arrange(dt_nasc, ds_nome_mae_sound) |>
group_by(dt_nasc, ds_nome_mae_sound) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_mae_sound) &
((ds_nome_mae_sound == lag(ds_nome_pac_sound)) | (ds_nome_pac_sound == lead(ds_nome_pac_sound))),
n(), NA))  |>
mutate(regra2 = ifelse(!is.na(N_par) & N_par > 1, 1, NA),
par_2 = ifelse(!is.na(N_par) & N_par > 1, cur_group_id() + max_par_1, NA)) |>
ungroup()
sum(df$regra1)
df$regra1
df |> filter(regra1==1) |> nrow()
# 1º condição
df <- concat_2 |>
arrange(ds_nome_pac, dt_nasc) |>
group_by(ds_nome_pac, dt_nasc) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_pac) &
((ds_nome_pac_sound == lag(ds_nome_pac_sound)) | (ds_nome_pac_sound == lead(ds_nome_pac_sound))), n(), NA))  |>
mutate(regra1 = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |>
mutate(par_1 = cur_group_id() * (N_par > 1)) |>
ungroup() |>
select(-N_par) |>
mutate(par_c1 = par_1) |>
arrange(par_1, banco)
max_par_1 <- max(df$par_1, na.rm = TRUE)
# 2º condição
df <- df |>
arrange(dt_nasc, ds_nome_mae_sound) |>
group_by(dt_nasc, ds_nome_mae_sound) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_mae_sound) &
((ds_nome_mae_sound == lag(ds_nome_pac_sound)) | (ds_nome_pac_sound == lead(ds_nome_pac_sound))),
n(), NA))  |>
mutate(regra2 = ifelse(!is.na(N_par) & N_par > 1, 1, NA),
par_2 = ifelse(!is.na(N_par) & N_par > 1, cur_group_id() + max_par_1, NA)) |>
ungroup()
df |> filter(regra2 == 1 ) |>  nrow()
################
# MEIO DE CAMPO
################
par_list <- df |>
distinct(par_1, par_2) |>
filter(!is.na(par_1), !is.na(par_2)) |>
rename('par_temp' = par_1)
nova_linha <- data.frame(matrix(NA, ncol = ncol(par_list), nrow = 1))
# Atribuir nomes de coluna à nova linha, se necessário
colnames(nova_linha) <- colnames(par_list)
# Adicionar a nova linha ao final do dataframe existente
par_list <- rbind(par_list, nova_linha)
h <- df |> select(par_1, par_2,ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869, 949))
c <- df |> filter(ds_nome_pac_sound %in% c('A342B465S410', 'A254F655L220', 'A655F253S412', 'A535C250S410', 'A535R362S410', 'A342B260S410') | par_2 %in% c(48133, 18801)) |> select(par_1, par_2, ds_nome_pac,ds_nome_pac_sound, dt_nasc, banco,regra1, regra2)
g <- left_join(c, par_list, by = "par_2") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
View(g)
g <- left_join(df, par_list, by = "par_2") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
# 1º condição
df <- concat_2 |>
arrange(ds_nome_pac, dt_nasc) |>
group_by(ds_nome_pac, dt_nasc) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_pac) &
((ds_nome_pac == lag(ds_nome_pac)) | (ds_nome_pac == lead(ds_nome_pac))), n(), NA))  |>
mutate(regra1 = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |>
mutate(par_1 = cur_group_id() * (N_par > 1)) |>
ungroup() |>
select(-N_par) |>
mutate(par_c1 = par_1) |>
arrange(par_1, banco)
max_par_1 <- max(df$par_1, na.rm = TRUE)
# 2º condição
df <- df |>
arrange(dt_nasc, ds_nome_mae_sound) |>
group_by(dt_nasc, ds_nome_mae_sound) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_mae_sound) &
((ds_nome_mae_sound == lag(ds_nome_mae_sound)) | (ds_nome_mae_sound == lead(ds_nome_mae_sound))),
n(), NA))  |>
mutate(regra2 = ifelse(!is.na(N_par) & N_par > 1, 1, NA),
par_2 = ifelse(!is.na(N_par) & N_par > 1, cur_group_id() + max_par_1, NA)) |>
ungroup()
gc()
################
# MEIO DE CAMPO
################
par_list <- df |>
distinct(par_1, par_2) |>
filter(!is.na(par_1), !is.na(par_2)) |>
rename('par_temp' = par_1)
nova_linha <- data.frame(matrix(NA, ncol = ncol(par_list), nrow = 1))
# Atribuir nomes de coluna à nova linha, se necessário
colnames(nova_linha) <- colnames(par_list)
# Adicionar a nova linha ao final do dataframe existente
par_list <- rbind(par_list, nova_linha)
h <- df |>select(par_1, par_2,par_temp, par_final, ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869,949))
g <- left_join(df, par_list, by = "par_2", relationship = "many-to-many") |>
mutate(par_final = coalesce(par_1, par_temp, par_2))
h <- g |>select(par_1, par_2,par_temp, par_final, ds_nome_pac, ds_nome_pac_sound, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869,949))
View(h)
h <- g |>select(par_1, par_2,par_temp, par_final, ds_nome_pac, ds_nome_pac_sound, ds_nome_mae, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869,949))
g <- left_join(df, par_list, by = "par_2", relationship = "many-to-many") |>
mutate(par_final = coalesce(par_temp, par_1, par_2))
h <- g |>select(par_1, par_2,par_temp, par_final, ds_nome_pac, ds_nome_pac_sound, ds_nome_mae, dt_nasc, banco,regra1, regra2) |> filter(par_1%in%c(869,949))
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
load('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/base_concatenada_rn.RData')
gc()
# 1º condição
df <- concat |>
arrange(ds_nome_pac, dt_nasc) |>
group_by(ds_nome_pac, dt_nasc) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_pac) &
((ds_nome_pac == lag(ds_nome_pac)) | (ds_nome_pac == lead(ds_nome_pac))), n(), NA))  |>
mutate(regra1 = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |>
mutate(par_1 = cur_group_id() * (N_par > 1)) |>
ungroup() |>
select(-N_par) |>
mutate(par_c1 = par_1) |>
arrange(par_1, banco)
# 2º condição
df <- df |>
arrange(dt_nasc, ds_nome_mae_sound) |>
group_by(dt_nasc, ds_nome_mae_sound) |>
mutate(N_par = ifelse(!is.na(dt_nasc) & !is.na(ds_nome_mae_sound) &
((ds_nome_mae_sound == lag(ds_nome_mae_sound)) | (ds_nome_mae_sound == lead(ds_nome_mae_sound))),
n(), NA))  |>
mutate(regra2 = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |>
mutate(par_2 = ifelse(!is.na(N_par) & N_par > 1, 1 + cur_group_id(), NA)) |>
ungroup() |>
vitallinkage::meio_de_campo()
variables <- c('ds_nome_pac', 'ds_nome_mae')
variables_olhar <- c('nu_doc')
arrange_str <- paste("arrange(", paste(variables, collapse = ", "), ")", sep = "")
group_by_str <- paste("group_by(", paste(variables, collapse = ", "), ")", sep = "")
na_condition <- paste("!is.na(", variables, ")", sep = "", collapse = " & ")
mutate_N_par_str <- paste("mutate(N_par = ifelse(", na_condition, " & (",
paste(variables_olhar, " == lag(", variables_olhar, ")", sep = "", collapse = " | "),
" | ",
paste(variables_olhar, " == lead(", variables_olhar, ")", sep = "", collapse = " | "),
"), n(), NA))", sep = "")
code <- paste("df <-  df |> ", arrange_str, " |> ", group_by_str)
code
nu_regra <-1
code <- paste("df <-  df |> ",
arrange_str, " |> ",
group_by_str, " |> ",
mutate_N_par_str,
" |> mutate(regra",nu_regra," = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |> mutate(par_1 = cur_group_id() * (N_par > 1)) |> ungroup() |> select(-N_par) |> mutate(par_c1 = par_1) |> arrange(par_1, banco)", sep = "")
code
code <- paste("df <-  df |> ",
arrange_str, " |> ",
group_by_str, " |> ",
mutate_N_par_str,
" |> mutate(regra",nu_regra," = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |>
mutate(par_1 = cur_group_id() * (N_par > 1)) |> ungroup() |> select(-N_par) |>
mutate(par_c",nu_regra," = par_1) |> arrange(par_1, banco)", sep = "")
code
code <- paste("df <-  df |> ",arrange_str, " |> ",group_by_str, " |> ",mutate_N_par_str," |> mutate(regra",nu_regra," = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |> mutate(par_1 = cur_group_id() * (N_par > 1)) |> ungroup() |> select(-N_par) |> mutate(par_c",nu_regra," = par_1) |> arrange(par_1, banco)", sep = "")
code
load('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/base_concatenada_rn.RData')
df <- concat
eval(parse(text = code))
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
variables <- c('ds_nome_pac', 'dt_nasc')
variables_olhar <- c('ds_nome_pac_sound')
arrange_str <- paste("arrange(", paste(variables, collapse = ", "), ")", sep = "")
group_by_str <- paste("group_by(", paste(variables, collapse = ", "), ")", sep = "")
na_condition <- paste("!is.na(", variables, ")", sep = "", collapse = " & ")
mutate_N_par_str <- paste("mutate(N_par = ifelse(", na_condition, " & (",
paste(variables_olhar, " == lag(", variables_olhar, ")", sep = "", collapse = " | "),
" | ",
paste(variables_olhar, " == lead(", variables_olhar, ")", sep = "", collapse = " | "),
"), n(), NA))", sep = "")
nu_regra <-1
code <- paste("df <-  df |> ",arrange_str, " |> ",group_by_str, " |> ",mutate_N_par_str," |> mutate(regra",nu_regra," = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |> mutate(par_1 = cur_group_id() * (N_par > 1)) |> ungroup() |> select(-N_par) |> mutate(par_c",nu_regra," = par_1) |> arrange(par_1, banco)", sep = "")
eval(parse(text = code))
df$par_1
generate_code <- function(df, variables, chave) {
arrange_str <- paste("arrange(", paste(variables, collapse = ", "), ")", sep = "")
group_by_str <- paste("group_by(", paste(variables, collapse = ", "), ")", sep = "")
na_condition <- paste("!is.na(", variables, ")", sep = "", collapse = " & ")
mutate_N_par_str <- paste("mutate(N_par = ifelse(", na_condition, " & (",
paste(chave, "== lag(", chave, ")", sep = "", collapse = " | "),
" | ",
paste(chave, "== lead(", chave, ")", sep = "", collapse = " | "),
"), n(), NA))", sep = "")
code <- paste("df <- df |>" , arrange_str, " |> ", group_by_str, " |> ", mutate_N_par_str,
" |> mutate(regra1 = ifelse(!is.na(N_par) & N_par > 1, 1, NA)) |> mutate(par_1 = cur_group_id() * (N_par > 1)) |> ungroup() |> select(-N_par) |> mutate(par_c1 = par_1) |> arrange(par_1, banco)", sep = "")
return(eval(parse(text = code)))
}
df <- concat
df_2 <- generate_code(df, c('ds_nome_pac', 'dt_nasc'), c('ds_nome_pac_sound'))
df_21 <- df_r6 |>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
regra2,
regra3,
regra4,
regra5,
regra6,
par_c1,
par_c2,
par_c3,
par_c4,
par_c5,
par_c6,
cd_causabas,
dt_obito
)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
regra2,
regra3,
regra4,
regra5,
regra6,
par_c1,
par_c2,
par_c3,
par_c4,
par_c5,
par_c6,
cd_causabas,
dt_obito
)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
par_c1
)
df_21
View(df_21)
as.character(df_2)
as.text(df_2)
df_name <- deparse(substitute(df))
df_name
df_name <- deparse(substitute(df_2))
df_name
library(vitaltable)
devtools::load_all(".")
devtools::check()
vitallinkage::start_linkage()
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
load('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/base_concatenada_rn.RData')
df <- concat |> vitallinkage::start_linkage(c('ds_nome_pac', 'dt_nasc'), "ds_nome_pac")
df$par_1
install.packages("PNADcIBGE")
library(PNADcIBGE)
dadosPNADc <- get_pnadc(year=2022, quarter=4)
dadosPNADc_brutos <- get_pnadc(year=2022, quarter=4, vars=c("VD4001","VD4002"), design=FALSE)
View(dadosPNADc_brutos)
rm(dadosPNADc_brutos)
devtools::load_all(".")
df_2 <- df |> vitallinkage::regras_linkage(c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_nasc'), c('ds_nome_pac'), 2)
devtools::load_all(".")
devtools::check()
df_2 <- df |> vitallinkage::regras_linkage(c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_nasc'), c('ds_nome_pac'), 2)
load('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/base_concatenada_rn.RData')
concat$nu_doc <- gsub("[^0-9]", NA, concat$nu_doc)
concat$nu_doc[concat$nu_doc == ""] <- NA
df <- concat |>
vitallinkage::start_linkage(c('ds_nome_pac', 'dt_nasc'), "ds_nome_pac")
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
df <- concat |>
vitallinkage::start_linkage(c('ds_nome_pac', 'dt_nasc'), "ds_nome_pac")
# Regra 2
df_2 <- df |> vitallinkage::regras_linkage(c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_nasc'), c('ds_nome_pac'), 2)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
par_c1,
par_c2
)
View(df_21)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
regra2,
par_c1,
par_c2
)
# Regra 3
df_2 <- df |>
vitallinkage::regras_linkage(
c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_nasc'),
c('ds_nome_pac'),
3
)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
regra2,
regra3,
par_c1,
par_c2,
par_c3
)
# Regra para iniciar o linkage
df <- concat |>
vitallinkage::start_linkage(c('ds_nome_pac', 'dt_nasc'), "ds_nome_pac")
# Regra 2
df_2 <- df |>
vitallinkage::regras_linkage(
c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_nasc'),
c('ds_nome_pac'),
2
)
# Regra 3
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_mae_sound', 'ds_nome_pai_sound', 'dt_nasc'),
c('ds_nome_pac'),
3
)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
regra2,
regra3,
par_c1,
par_c2,
par_c3
)
View(df_21)
# Regra 5
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'nu_doc'),
c('ds_nome_pac_sound'),
5
)
df_21 <- df_2|>
select(
par_1,
ds_nome_pac,
ds_nome_pac_sound,
ds_nome_mae, ds_nome_pai,
dt_nasc,
banco,
nu_doc,
regra1,
regra2,
regra3,
regra5,
par_c1,
par_c2,
par_c3,
par_c5
)
View(df_21)
a <- df_21 |> filter(is.na(regra11), !is.na(regra2))
a <- df_21 |> filter(is.na(regra1), !is.na(regra2))
a <- df_21 |> filter(is.na(regra1), !is.na(regra5))
b <- df_21 |> filter(par_1%in%a$par_1)
View(b)
