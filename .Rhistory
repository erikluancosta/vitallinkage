library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
namestand<- vitallinkage::namestand
sinan <- read.dbf('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/SINAN/VIOLENET.DBF')
sinan |>
vitallinkage::criar_coluna_id("SINAN")
devtools::load_all(".")
sinan |>
vitallinkage::criar_coluna_id("SINAN")
sinan |>
vitallinkage::criar_coluna_id("SINAN") |>
vitallinkage::drop_duplicados_sinan_1()
source("~/.active-rstudio-document", echo=TRUE)
devtools::check()
devtools::load_all(".")
# carregamento da base com os nomes das colunas
namestand <- vitallinkage::namestand
padroniza_variaveis <- function(df, nome_base){
# carregamento da base com os nomes das colunas
namestand <- vitallinkage::namestand
# nomes das variáveis originais e padronizadas filtradas para o df
df_names <- namestand %>%
dplyr::filter(fonte == nome_base) %>%
dplyr::select(var_names_orig, stanard_name)
df <- df %>%
select(df_names$var_names_orig)
names(df) <- df_names$stanard_name
}
sinan <- sinan |>
vitallinkage::criar_coluna_id("SINAN") |> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::drop_duplicados_sinan_1() |>
padroniza_variaveis("SINAN")# Dropa as colunas duplicadas inicialmente
View(sinan)
View(sinan)
sinan <- sinan |>
vitallinkage::criar_coluna_id("SINAN") |> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::drop_duplicados_sinan_1() #Dropa as colunas duplicadas inicialmente
sinan <- read.dbf('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/SINAN/VIOLENET.DBF')
sinan <- sinan |>
vitallinkage::criar_coluna_id("SINAN") |> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::drop_duplicados_sinan_1() #Dropa as colunas duplicadas inicialmente
sinan2<- sinan |> padroniza_variaveis("SINAN")
sinan2<- sinan |> padroniza_variaveis("SINAN")
View(sinan)
sinan2<- padroniza_variaveis(sinan,"SINAN")
sinan2<- padroniza_variaveis(sinan,"SINAN")
padroniza_variaveis <- function(df, nome_base){
# carregamento da base com os nomes das colunas
namestand <- vitallinkage::namestand
# nomes das variáveis originais e padronizadas filtradas para o df
df_names <- namestand %>%
dplyr::filter(fonte == nome_base) %>%
dplyr::select(var_names_orig, stanard_name)
df <- df %>%
select(df_names$var_names_orig)
return(names(df) <- df_names$stanard_name)
}
sinan2<- padroniza_variaveis(sinan,"SINAN")
View(sinan)
padroniza_variaveis <- function(sinan, nome_base){
# carregamento da base com os nomes das colunas
namestand <- vitallinkage::namestand
# nomes das variáveis originais e padronizadas filtradas para o SINAN
sinan_names <- namestand %>%
dplyr::filter(fonte == "SINAN") %>%
dplyr::select(var_names_orig, stanard_name)
sinan <- sinan %>%
select(sinan_names$var_names_orig)
names(sinan) <- sinan_names$stanard_name
}
padroniza_variaveis(sinan,"SINAN")
sinan2<- padroniza_variaveis(sinan,"SINAN")
View(namestand)
namestand %>%
dplyr::filter(fonte == "SINAN") %>%
dplyr::select(var_names_orig, stanard_name)
# nomes das variáveis originais e padronizadas filtradas para o SINAN
sinan_names <- namestand %>%
dplyr::filter(fonte == "SINAN") %>%
dplyr::select(var_names_orig, stanard_name)
sinan %>%
select(sinan_names$var_names_orig)
sinan <- sinan %>%
select(sinan_names$var_names_orig)
names(sinan) <- sinan_names$stanard_name
View(sinan)
padroniza_variaveis <- function(df, nome_base){
# nomes das variáveis originais e padronizadas filtradas para o SINAN
sinan_names <- namestand %>%
dplyr::filter(fonte == nome_base) %>%
dplyr::select(var_names_orig, stanard_name)
df <- df %>%
select(sinan_names$var_names_orig)
names(df) <- sinan_names$stanard_name
}
sinan <- read.dbf('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/SINAN/VIOLENET.DBF')
View(sinan)
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN") # Criando colunas com ID "SINAN_1 ... "
sinan2<- padroniza_variaveis(sinan,"SINAN")
sinan2<- padroniza_variaveis("SINAN")
sinan2<- sinan |> padroniza_variaveis("SINAN")
rm(sinan2)
sinan2<- sinan |> padroniza_variaveis("SINAN")
return(names(df) <- sinan_names$stanard_name)
padroniza_variaveis <- function(df, nome_base){
# nomes das variáveis originais e padronizadas filtradas para o SINAN
sinan_names <- namestand %>%
dplyr::filter(fonte == nome_base) %>%
dplyr::select(var_names_orig, stanard_name)
df <- df %>%
select(sinan_names$var_names_orig)
return(names(df) <- sinan_names$stanard_name)
}
sinan2<- sinan |> padroniza_variaveis("SINAN")
padroniza_variaveis <- function(df, nome_base) {
# nomes das variáveis originais e padronizadas filtradas para o SINAN
sinan_names <- namestand %>%
filter(fonte == nome_base) %>%
select(var_names_orig, stanard_name)
# Seleciona as variáveis do dataframe original
df <- df %>%
select(sinan_names$var_names_orig)
# Renomeia as colunas do dataframe com os valores de stanard_name
names(df) <- sinan_names$stanard_name
return(df)
}
sinan2<- sinan |> padroniza_variaveis("SINAN")
padroniza_variaveis <- function(df, nome_base) {
# nomes das variáveis originais e padronizadas filtradas para o SINAN
names <- namestand %>%
filter(fonte == nome_base) %>%
select(var_names_orig, stanard_name)
# Seleciona as variáveis do dataframe original
df <- df %>%
select(names$var_names_orig)
# Renomeia as colunas do dataframe com os valores de stanard_name
names(df) <- names$stanard_name
return(df)
}
sinan2<- sinan |> padroniza_variaveis("SINAN")
View(sinan2)
rm(sinan2)
sinan <- read.dbf('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/SINAN/VIOLENET.DBF')
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN")|> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::padroniza_variaveis("SINAN")
devtools::load_all(".")
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN")|> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::padroniza_variaveis("SINAN")
devtools::check()
rm(padroniza_variaveis())
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN")|> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::padroniza_variaveis("SINAN")
devtools::load_all(".")
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN")|> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::padroniza_variaveis("SINAN")
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
devtools::load_all(".")
sinan <- read.dbf('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/SINAN/VIOLENET.DBF')
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN")|> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::padroniza_variaveis("SINAN")
devtools::load_all(".")
devtools::load_all(".")
devtools
devtools::check()
devtools::check()
sinan <- sinan |>
vitallinkage::drop_duplicados_sinan_1() |>  #Dropa as colunas duplicadas inicialmente
vitallinkage::criar_coluna_id("SINAN")|> # Criando colunas com ID "SINAN_1 ... "
vitallinkage::padroniza_variaveis("SINAN")
devtools::check()
