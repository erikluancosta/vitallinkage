# Regra 8
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_mae2', 'ds_nome_mae_sound', 'nu_idade_anos', 'cd_mun_not'),
c('ds_nome_pac'),
8
)
# Regra 9
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('dt_nasc', 'dt_obito', 'cd_mun_res', 'ds_nome_pac3', 'sg_sexo', 'ds_nome_pac1'),
c('ds_nome_mae_sound'),
9
)
# Regra 10
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac', 'nu_idade_anos', 'cd_mun_res', 'ds_bairro_res', 'dt_nasc'),
c('ds_nome_pac'),
10
)
colunas_par_c <- grep("^par_c", names(df_sim), value = TRUE)
sim_contagem <- df_sim |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_sim |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
colunas_par_c <- grep("^par_c", names(df_sim), value = TRUE)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
b <- df_2 |> filter(par_1 %in% c(56052)) |>
select(par_1, ds_nome_pac, ds_nome_pac1, ds_nome_pac2, ds_nome_pac3, ds_nome_pac1_sound, ds_nome_pac2_sound, ds_nome_pac3_sound, dt_nasc, ds_nome_mae, ds_nome_mae1, ds_nome_mae2, ds_nome_mae3, nu_tel)
View(b)
# Regra 11
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2', 'nu_idade_anos', 'ds_rua_res', 'sg_sexo', 'dt_nasc'),
c('ds_nome_mae2'),
11
)
# Regra 12
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_pac2', 'nu_cpf'),
c('ds_nome_mae1_sound'),
12
)
# Regra 13 - pega mãe e filho
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac2', 'nu_cpf'),
c('nu_cpf'),
13
)
# Regra 14
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_mae1', 'ds_nome_pac1_sound', 'ds_nome_pac2_sound', 'nu_cpf'),
c('ds_nome_pac_sound'),
14
)
# Regra 15
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('cd_cep_res', 'ds_nome_pac1', 'ds_nome_pac_sound', 'dt_nasc'),
c('nu_cpf'),
15
)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# Regra 16
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('cd_cep_res', 'ds_nome_pac1', 'ds_nome_mae_sound', 'dt_nasc', 'ds_nome_pac3'),
c('ds_nome_mae1'),
16
)
# Regra 17
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('cd_mun_not', 'sg_sexo', 'ds_nome_pac2', 'ds_nome_mae_sound', 'dt_nasc', 'nu_idade_anos', 'ds_bairro_res'),
c('ds_nome_mae_sound'),
17
)
# Regra 18 - Nenhum novo
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('cd_mun_not', 'sg_sexo', 'ds_nome_pac2', 'ds_nome_mae_sound', 'dt_nasc', 'nu_idade_anos', 'ds_bairro_res'),
c('ds_nome_mae_sound'),
18
)
# Regra 19
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('cd_mun_res', 'sg_sexo', 'ds_nome_pac_sound', 'dt_nasc', 'nu_idade_anos', 'ds_bairro_res'),
c('ds_nome_mae_sound'),
19
)
# Regra 20
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('cd_mun_res', 'sg_sexo', 'ds_nome_pac_sound', 'dt_nasc', 'nu_idade_anos', 'ds_bairro_res'),
c('ds_nome_mae_sound'),
20
)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
# Regra 21 nada novo
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('dt_nasc', 'sg_sexo', 'ds_nome_mae_sound', 'nu_idade_anos', 'ds_bairro_res', 'dt_obito'),
c('ds_nome_pac_sound'),
21
)
# Regra 22 nada novo
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'sg_sexo', 'dt_nasc', 'ds_nome_pac2', 'cd_mun_res', 'ds_nome_mae1'),
c('nu_cpf'),
22
)
# Regra 23 Nada novo
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1_sound', 'ds_nome_pac2_sound', 'dt_nasc', 'cd_mun_res', 'ds_nome_mae1_sound','ds_nome_mae3_sound'),
c('nu_cpf'),
23
)
# Regra 24
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1_sound', 'nu_tel', 'ano_nasc', 'mes_nasc'),
c('ds_nome_mae_sound'),
24
)
# Regra 25
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1_sound', 'nu_tel', 'dt_nasc'),
c('ds_nome_mae_sound'),
25
)
# Regra 26 Pegou bem
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'dt_nasc', 'mae_11', 'nu_tel'),
c('ds_nome_pac_sound'),
26
)
# Regra 27
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('nu_doc', 'ds_nome_pac1', 'dia_nasc'),
c('nu_cpf'),
27
)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
save(rn_linkada_teste, file = 'C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/rn_linkada.RData')
rn_linkada_teste <- df_2
save(rn_linkada_teste, file = 'C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/rn_linkada.RData')
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
load('C:/vitalstrategies/data_sicence/TCC/script_linkage/dados/rn_linkada.RData')
library(readstata13)
library(tidyverse)
library(pdftools)
library(data.table)
library(dplyr)
library(readxl)
library(foreign)
library(stringi)
library(SoundexBR) #soundex
library(janitor)
library(lubridate)
library(writexl)
library(vitaltable)
devtools::load_all(".")
options(scipen = 999)
###########
# Regra 28
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_mae_sound', 'dt_nasc', 'nu_idade_anos', 'ds_bairro_res_sound'),
c('ds_nome_pac_sound'),
28
)
# Regra 29
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_mae_sound', 'dia_nasc', 'ano_nasc', 'nu_idade_anos', 'nao_gemelar'),
c('ds_nome_pac1_sound'),
29
)
# Regra 30
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2_sound', 'nu_tel', 'faixa_etaria', 'ds_nome_pac3', 'dia_nasc', 'mes_nasc', 'nao_gemelar'),
c('ds_nome_mae1_sound'),
30
)
# Regra 31
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2_sound', 'nome_pac_6', 'nu_tel', 'mae_11', 'ds_nome_pac3', 'dia_nasc', 'mes_nasc', 'nao_gemelar'),
c('ds_nome_mae1_sound'),
31
)
# Regra 32
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_mae', 'dia_nasc', 'mes_nasc', 'nao_gemelar', 'nu_cns' ),
c('ds_nome_pac3_sound'),
32
)
# Regra 33
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2', 'ds_nome_pac3', 'dt_nasc', 'nao_gemelar', 'nome_5_12'),
c('ds_nome_mae_sound'),
33
)
# Regra 34 Não pegou nada
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'dt_nasc', 'ds_nome_mae_sound', 'nu_cpf'),
c('nu_cpf', 'nu_cns'),
34
)
df_2 <- rn_linkada_teste |>
mutate(
nao_gemelar = ifelse(is.na(gemelar), 1, NA),
nome_pac_6 = substr(ds_nome_pac, 1, 11),
nome_5_12 = substr(ds_nome_pac, 5, 12)
)
rm(rn_linkada_teste)
###########
# Regra 28
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_mae_sound', 'dt_nasc', 'nu_idade_anos', 'ds_bairro_res_sound'),
c('ds_nome_pac_sound'),
28
)
# Regra 29
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_mae_sound', 'dia_nasc', 'ano_nasc', 'nu_idade_anos', 'nao_gemelar'),
c('ds_nome_pac1_sound'),
29
)
# Regra 30
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2_sound', 'nu_tel', 'faixa_etaria', 'ds_nome_pac3', 'dia_nasc', 'mes_nasc', 'nao_gemelar'),
c('ds_nome_mae1_sound'),
30
)
# Regra 31
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2_sound', 'nome_pac_6', 'nu_tel', 'mae_11', 'ds_nome_pac3', 'dia_nasc', 'mes_nasc', 'nao_gemelar'),
c('ds_nome_mae1_sound'),
31
)
# Regra 32
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_mae', 'dia_nasc', 'mes_nasc', 'nao_gemelar', 'nu_cns' ),
c('ds_nome_pac3_sound'),
32
)
# Regra 33
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac2', 'ds_nome_pac3', 'dt_nasc', 'nao_gemelar', 'nome_5_12'),
c('ds_nome_mae_sound'),
33
)
# Regra 34 Não pegou nada
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'dt_nasc', 'ds_nome_mae_sound', 'nu_cpf'),
c('nu_cpf', 'nu_cns'),
34
)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
df_2 |> filter(!is.na(par_1)) |> nrow()
df_2 <- df_2 |>
mutate(
nao_gemelar = ifelse(is.na(gemelar), 1, NA),
nome_pac_6 = substr(ds_nome_pac, 1, 11),
nome_5_12 = substr(ds_nome_pac, 5, 12),
dif_ob_nasc = dt_obito-dt_nasc
)
df_2 |> select(df_ob_nasc)
df_2 <- df_2 |>
mutate(
nao_gemelar = ifelse(is.na(gemelar), 1, NA),
nome_pac_6 = substr(ds_nome_pac, 1, 11),
nome_5_12 = substr(ds_nome_pac, 5, 12),
dif_ob_nasc = dt_obito-dt_nasc
)
df_2$dif_ob_nasc
df_2$dt_obito
df_2$dt_nasc
# # Regra 35
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc'),
c('ds_nome_pac_sound'),
35
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# # Regra 35
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc', 'dt_nasc', 'ds_nome_mae1', ''),
c('ds_nome_pac_sound'),
35
)
# # Regra 35
df_t <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc', 'dt_nasc', 'ds_nome_mae1', 'ds_nome_mae3'),
c('ds_nome_pac_sound'),
35
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c35)
# Regra 35 - demora bastante
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac_sound', 'ds_nome_pac1', 'sg_sexo', 'morreu', 'nu_idade_anos', 'dia_nasc', 'dt_nasc', 'ds_nome_mae1', 'ds_nome_mae3'),
c('ds_nome_pac_sound'),
35
)
df_t$par_c35
df_2<-df_t
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c35)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c35') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Regra 36 - demora bastante
df_2 <- df_2 |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_pac2', 'sg_sexo', 'nu_idade_anos', 'mes_nasc', 'gemelar', 'morreu'),
c('ds_nome_pac_sound'),
36
)
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
View(acompanhamento)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c35)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c35') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
# Regra 37
df_2 <- df_2 |>
mutate(nome_menos_5d = str_sub(ds_nome_pac, end = -6)) |>
vitallinkage::regras_linkage(
c('ds_nome_pac1', 'ds_nome_pac2', 'dt_obito', 'dt_nasc', 'mes_nasc', 'gemelar', 'morreu'),
c('ds_nome_mae_sound'),
37
)
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_t |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_t |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
colunas_par_c <- grep("^par_c", names(df_t), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
View(sim_duplicado)
colunas_par_c <- grep("^par_c", names(df_2), value = TRUE)
sim_contagem <- df_2 |> filter(banco == 'SIM') |>  group_by(par_1) |> summarise(contagem = n()) |> filter(contagem>1, !is.na(par_1))
sim_duplicado <- df_2 |> filter(par_1%in%sim_contagem$par_1) |>
select(
par_1,all_of(colunas_par_c),banco, ds_nome_pac, dt_nasc, dt_obito,ds_nome_mae, nu_cns, nu_doc,nu_do, nu_tel
) |>
filter(banco == 'SIM')
# Cria lista de colunas que começam com "par_c"
colunas_par_c <- grep("^par_c3", names(df_2), value = TRUE)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
# Casos novos identificados na regra
novos <- vitallinkage::casos_novos(df_2, par_c36)
# Registros identificados na regra que já foram identificados antes
complementares <-
vitallinkage::filtro_par_c_especifico(df_2, 'par_c36') |>
select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
View(complementares)
# Dataframe com colunas selecionadas para acompanhamento
acompanhamento <- df_2 |>  select(
par_1, all_of(colunas_par_c),
ds_nome_pac, dt_nasc, ds_nome_mae,
nu_cpf, nu_cns, cd_mun_not ,banco
)
View(acompanhamento)
